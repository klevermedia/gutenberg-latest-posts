{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoC;AAC6B;AACS;AAClB;AACb;AAE3C,MAAMQ,IAAI,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAC5C,MAAMC,UAAU,GAAGR,sEAAa,CAAC,CAAC;EAElC,MAAM;IAAES;EAAK,CAAC,GAAGH,UAAU;;EAE3B;EACA,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGT,4DAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI,EAAE;MAChC;MACA,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM,CAAEC,CAAC,IAAKP,WAAW,CAACQ,QAAQ,CAACD,CAAC,CAAC,CAAC;MAE3DV,aAAa,CAAC;QACVE,IAAI,EAAE;UACFU,KAAK,EAAEH,MAAM;UACbI,EAAE,EAAER,aAAa,CAACI,MAAM;QAC5B;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAEDb,6DAAS,CAAC,MAAM;IACZC,2DAAQ,CAAC;MAAEiB,IAAI,EAAE;IAAe,CAAC,CAAC,CAC7BC,IAAI,CAACC,KAAK,IAAI;MACX,MAAMC,MAAM,GAAG,EAAE;MACjB,MAAMC,YAAY,GAAG,CAAC,CAAC;;MAEvB;MACAF,KAAK,CAACG,OAAO,CAACjB,IAAI,IAAI;QAClB,MAAMU,KAAK,GAAGV,IAAI,CAACU,KAAK,CAACQ,QAAQ;QACjCH,MAAM,CAACI,IAAI,CAACT,KAAK,CAAC;QAClBM,YAAY,CAACN,KAAK,CAAC,GAAGV,IAAI,CAACW,EAAE,CAACS,QAAQ,CAAC,CAAC;MAC5C,CAAC,CAAC;MAEFlB,cAAc,CAACa,MAAM,CAAC;MACtBX,gBAAgB,CAACY,YAAY,CAAC;IAClC,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OACIE,oDAAA;IAAA,GAASzB;EAAU,GACfyB,oDAAA,CAAChC,sEAAiB,QACdgC,oDAAA,CAACnC,4DAAS;IAACqB,KAAK,EAAEtB,mDAAE,CAAC,aAAa,EAAE,kBAAkB;EAAE,GACpDoC,oDAAA,CAAClC,iEAAc;IACXmC,KAAK,EAAC,eAAe;IACrBC,QAAQ,EAAErB,YAAa;IACvBsB,WAAW,EAAE1B,WAAY;IACzBK,KAAK,EAAEN,IAAI,GAAGA,IAAI,CAACU,KAAK,GAAG;EAAK,CACnC,CACM,CACI,CAAC,EAEpBc,oDAAA,cAAK,SAAO,EAACxB,IAAI,GAAGA,IAAI,CAACU,KAAK,GAAG,EAAE,EAAC,QAAM,EAACV,IAAI,GAAGA,IAAI,CAACW,EAAE,GAAG,EAAQ,CACnE,CAAC;AAEd,CAAC;AAED,iEAAef,IAAI;;;;;;;;;;;;;;;;;ACpEnB;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAgC,oEAAiB,CAAEE,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAEpC,6CAAI;EAEV;AACD;AACA;EACCiC,IAAIA,+CAAAA;AACL,CAAE,CAAC;;;;;;;;;;;;;;;;;;;ACtCH;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,IAAIA,CAAA,EAAG;EAC9B,OACCL,oDAAA;IAAA,GAAQjC,kEAAa,CAACsC,IAAI,CAAC;EAAC,GACzB,mDACA,CAAC;AAEN;;;;;;;;;;;ACvBA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://lee-recent-posts/./src/edit.js","webpack://lee-recent-posts/./src/index.js","webpack://lee-recent-posts/./src/save.js","webpack://lee-recent-posts/./src/style.scss","webpack://lee-recent-posts/external window \"React\"","webpack://lee-recent-posts/external window [\"wp\",\"apiFetch\"]","webpack://lee-recent-posts/external window [\"wp\",\"blockEditor\"]","webpack://lee-recent-posts/external window [\"wp\",\"blocks\"]","webpack://lee-recent-posts/external window [\"wp\",\"components\"]","webpack://lee-recent-posts/external window [\"wp\",\"element\"]","webpack://lee-recent-posts/external window [\"wp\",\"i18n\"]","webpack://lee-recent-posts/webpack/bootstrap","webpack://lee-recent-posts/webpack/runtime/chunk loaded","webpack://lee-recent-posts/webpack/runtime/compat get default export","webpack://lee-recent-posts/webpack/runtime/define property getters","webpack://lee-recent-posts/webpack/runtime/hasOwnProperty shorthand","webpack://lee-recent-posts/webpack/runtime/make namespace object","webpack://lee-recent-posts/webpack/runtime/jsonp chunk loading","webpack://lee-recent-posts/webpack/before-startup","webpack://lee-recent-posts/webpack/startup","webpack://lee-recent-posts/webpack/after-startup"],"sourcesContent":["import { __ } from \"@wordpress/i18n\"\nimport { PanelBody, FormTokenField } from '@wordpress/components'\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor'\nimport { useState, useEffect } from '@wordpress/element'\nimport apiFetch from '@wordpress/api-fetch'\n\nconst Edit = ({ attributes, setAttributes }) => {\n    const blockProps = useBlockProps()\n\n    const { post } = attributes\n\n    // Fetch latest posts and store them in state, also store a map of post titles to post IDs\n    const [latestPosts, setLatestPosts] = useState([])\n    const [postTitleToID, setPostTitleToID] = useState({})\n\n    const handleChange = (value) => {\n        if (value !== '' || value !== null) {\n            // Filter posts that are not in the latest posts to avoid user inputting invalid post title\n            const filter = value.filter((t) => latestPosts.includes(t));\n\n            setAttributes({\n                post: {\n                    title: filter,\n                    id: postTitleToID[filter]\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        apiFetch({ path: '/wp/v2/posts' })\n            .then(posts => {\n                const titles = []\n                const titleToIdMap = {}\n                \n                // Loop posts and store titles in an array, also store a map of post titles to post IDs\n                posts.forEach(post => {\n                    const title = post.title.rendered\n                    titles.push(title)\n                    titleToIdMap[title] = post.id.toString()\n                })\n                \n                setLatestPosts(titles)\n                setPostTitleToID(titleToIdMap)\n            })\n            .catch(error => {\n                console.error('Error fetching posts:', error)\n            })\n    }, [])\n\n    return (\n        <div {...blockProps}>\n            <InspectorControls>\n                <PanelBody title={__('Select post', 'lee-recent-posts')}>\n                    <FormTokenField\n                        label=\"Select a post\"\n                        onChange={handleChange}\n                        suggestions={latestPosts}\n                        value={post ? post.title : null}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div>Title: {post ? post.title : ''}, ID: {post ? post.id : ''}</div>\n        </div>\n    )\n}\n\nexport default Edit\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save() {\n\treturn (\n\t\t<p { ...useBlockProps.save() }>\n\t\t\t{ 'Recent Posts List â€“ hello from the saved content!' }\n\t\t</p>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunklee_recent_posts\"] = globalThis[\"webpackChunklee_recent_posts\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","PanelBody","FormTokenField","useBlockProps","InspectorControls","useState","useEffect","apiFetch","Edit","attributes","setAttributes","blockProps","post","latestPosts","setLatestPosts","postTitleToID","setPostTitleToID","handleChange","value","filter","t","includes","title","id","path","then","posts","titles","titleToIdMap","forEach","rendered","push","toString","catch","error","console","createElement","label","onChange","suggestions","registerBlockType","save","metadata","name","edit"],"sourceRoot":""}